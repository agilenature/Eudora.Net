<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="validationErrorTemplate">
        <DockPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                <Grid Width="12" Height="12">
                    <Ellipse Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Red"/>
                    <TextBlock Foreground="White" FontWeight="Heavy" FontSize="8"
                               HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"
                               ToolTip="{Binding ElementName=ErrorAdorner,Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">X</TextBlock>
                </Grid>
                <TextBlock Foreground="Red" FontWeight="Medium" Margin="2,0,0,0"
                           Text="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
            </StackPanel>
            <AdornedElementPlaceholder x:Name="ErrorAdorner"/>
        </DockPanel>
    </ControlTemplate>
    
    
    <Style x:Key="MainToolbarButton">
        <Setter Property="Control.Margin" Value="5,5,5,5"/>
        <Setter Property="Control.Width" Value="32"/>
        <Setter Property="Control.Height" Value="32"/>
    </Style>

    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>-->
        <Setter Property="Background" Value="{DynamicResource Control}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Control}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrush}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Control}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ActiveBorder}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ControlDark}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource InactiveBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource ControlDark}"/>-->
                            <!--<Setter Property="OpacityMask" Value="{DynamicResource ControlDark}"/>-->
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource InactiveText}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{DynamicResource Control}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveText}"/>
    </Style>
    <Style TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource ControlDark}"/>
        <Setter Property="Foreground" Value="{DynamicResource ControlDark}"/>
    </Style>


    <!--<Style TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource Menu}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveText}"/>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="Yellow"/>
                <Setter Property="BorderBrush" Value="Blue"/>
            </Trigger>
        </Style.Triggers>        
    </Style>-->

    
    <!--<Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Control}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveText}"/>
    </Style>-->

    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource Control}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveText}"/>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Background" Value="{DynamicResource Control}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveText}"/>
    </Style>

    <!--<Style TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource Control}"/>
    </Style>-->

    <Style TargetType="GridSplitter">
        <Setter Property="Background" Value="{DynamicResource ControlDark}"/>
        <Setter Property="Foreground" Value="{DynamicResource ControlLight}"/>
    </Style>


    <SolidColorBrush Color="#FFEEF5FD" 
                     x:Key="Toolbar"/>
    
    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlTextColorKey}}" 
                     x:Key="ActiveText"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.GrayTextColorKey}}" 
                     x:Key="InactiveText"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" 
                     x:Key="Window"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.WindowFrameColorKey}}" 
                     x:Key="WindowFrame"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" 
                     x:Key="Control"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}"
                     x:Key="ControlLight"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" 
                     x:Key="ControlDark"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}" 
                     x:Key="ActiveBorder"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}" 
                     x:Key="InactiveBorder"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.MenuBarColorKey}}" 
                     x:Key="MenuBar"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.MenuColorKey}}" 
                     x:Key="Menu"/>

    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}" 
                     x:Key="MenuHilight"/>

    <SolidColorBrush Color="#C0C0C0" 
                     x:Key="DefaultGray"/>

</ResourceDictionary>